{"version":3,"file":"ic-datepicker-options.js","sourceRoot":"","sources":["../../../src/models/ic-datepicker-options.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Moment from 'moment';\n\nimport { IcDatepickerOptionsInterface } from '../interfaces/ic-datepicker-options';\nimport { IcDatepickerQuickOption } from '../interfaces/ic-datepicker-quick-option';\nimport { IcDatepickerDay } from '../interfaces/ic-datepicker-day';\nimport { IcDatepickerService } from '../services/ic-datepicker.service';\nimport { IcCustomDayClass } from \"../interfaces/ic-custom-day-class\";\nimport { IcDatepickerIcon } from '../interfaces/ic-datepicker-icon';\n\ntype datepickerPosition = 'top' | 'bottom';\n\nexport const defaultDayQuickOptions = [\n  {\n    label: 'Today',\n    date: Moment()\n  },\n  {\n    label: 'Tomorrow',\n    date: Moment().add(1, 'day')\n  }\n];\n\nexport class IcDatepickerOptions {\n  attrs: {\n    id: string | null,\n    name: string | null,\n    placeholder: string | null,\n    readonly: boolean,\n    tabindex: number | null\n  };\n  clearInvalidDates: boolean;\n  closeOnSelect: boolean;\n  customDayClasses: IcCustomDayClass[];\n  dayQuickOptions: IcDatepickerQuickOption[];\n  defaultToYearSelect: boolean;\n  disableDayFn: Function;\n  disableWeekends: boolean;\n  displayFormat: string;\n  icons: {\n    nextMonth: IcDatepickerIcon,\n    nextYears: IcDatepickerIcon,\n    previousMonth: IcDatepickerIcon,\n    previousYears: IcDatepickerIcon\n  };\n  inputClasses: string[];\n  maxDate?: Moment.Moment;\n  minDate?: Moment.Moment;\n  modelType: string;\n  position: string;\n  showAdjacentMonthDays: boolean;\n  showDayQuickOptions: boolean;\n  stringModelFormat: string;\n\n  private defaults = {\n    attrs: {\n      id: null,\n      name: null,\n      placeholder: null,\n      readonly: true,\n      tabindex: null\n    },\n    clearInvalidDates: true,\n    closeOnSelect: true,\n    customDayClasses: [],\n    dayQuickOptions: defaultDayQuickOptions,\n    defaultToYearSelect: false,\n    disableDayFn: () => { return false; },\n    disableWeekends: false,\n    displayFormat: 'L',\n    icons: {\n      nextMonth: { classes: ['chevron', 'chevron-right'] },\n      nextYears: { classes: ['chevron', 'chevron-down'] },\n      previousMonth: { classes: ['chevron', 'chevron-left'] },\n      previousYears: { classes: ['chevron', 'chevron-up'] }\n    },\n    inputClasses: [],\n    maxDate: undefined,\n    minDate: undefined,\n    modelType: 'moment',\n    position: 'bottom',\n    showAdjacentMonthDays: true,\n    showDayQuickOptions: true,\n    stringModelFormat: 'YYYY-MM-DD'\n  };\n\n  constructor(\n    options: IcDatepickerOptionsInterface,\n    private icDatepickerService: IcDatepickerService\n  ) {\n    if (options.attrs) {\n      this.attrs = {\n        id: options.attrs.id || this.defaults.attrs.id,\n        name: options.attrs.name || this.defaults.attrs.name,\n        placeholder: options.attrs.placeholder || this.defaults.attrs.placeholder,\n        readonly: options.attrs.readonly || this.defaults.attrs.readonly,\n        tabindex: options.attrs.tabindex || this.defaults.attrs.tabindex\n      };\n    } else {\n      this.attrs = this.defaults.attrs;\n    }\n\n    if (options.icons) {\n      this.icons = {\n        nextMonth: options.icons.nextMonth || this.defaults.icons.nextMonth,\n        nextYears: options.icons.nextYears || this.defaults.icons.nextYears,\n        previousMonth: options.icons.previousMonth || this.defaults.icons.previousMonth,\n        previousYears: options.icons.previousYears || this.defaults.icons.previousYears\n      };\n    } else {\n      this.icons = this.defaults.icons;\n    }\n\n    this.clearInvalidDates = (null == options.clearInvalidDates) ? this.defaults.clearInvalidDates : options.clearInvalidDates;\n    this.closeOnSelect = (null == options.closeOnSelect) ? this.defaults.closeOnSelect : options.closeOnSelect;\n    this.customDayClasses = options.customDayClasses || this.defaults.customDayClasses;\n    this.defaultToYearSelect = options.defaultToYearSelect || this.defaults.defaultToYearSelect;\n    this.disableDayFn = options.disableDayFn || this.defaults.disableDayFn;\n    this.disableWeekends = (null == options.disableWeekends) ? this.defaults.disableWeekends : options.disableWeekends;\n    this.displayFormat = options.displayFormat || this.defaults.displayFormat;\n    this.inputClasses = options.inputClasses || this.defaults.inputClasses;\n    this.maxDate = options.maxDate || this.defaults.maxDate;\n    this.minDate = options.minDate || this.defaults.minDate;\n    this.modelType = options.modelType || this.defaults.modelType;\n    this.position = options.position || this.defaults.position as datepickerPosition;\n    this.showAdjacentMonthDays = (null == options.showAdjacentMonthDays) ? this.defaults.showAdjacentMonthDays : options.showAdjacentMonthDays;\n    this.showDayQuickOptions = (null == options.showDayQuickOptions) ? this.defaults.showDayQuickOptions : options.showDayQuickOptions;\n    this.stringModelFormat = options.stringModelFormat || this.defaults.stringModelFormat;\n\n    this.dayQuickOptions = this.buildDayQuickOptions(options.dayQuickOptions || this.defaults.dayQuickOptions);\n  }\n\n  /**\n   * Converts an array of quick day selection options into Datepicker Day instances\n   *\n   * @param options\n   * @returns {IcDatepickerDay[]}\n   */\n  private buildDayQuickOptions(options: IcDatepickerQuickOption[]): IcDatepickerQuickOption[] {\n    options.map(option => {\n      option.isDisabled = this.disableDayFn(option.date) ||\n        (this.disableWeekends && [6, 7].indexOf(option.date.isoWeekday()) > -1);\n      option.datepickerDay = this.icDatepickerService.buildDatepickerDay(\n        option.date,\n        this,\n        option.date\n      );\n    });\n\n    return options;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}