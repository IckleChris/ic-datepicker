{"version":3,"file":"ic-datepicker.component.js","sourceRoot":"","sources":["../../src/ic-datepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, HostListener, Input, forwardRef, OnInit, ViewEncapsulation, Renderer,\n  OnDestroy, ElementRef, Output, EventEmitter, Inject, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as Moment from 'moment';\n\nimport { IcDatepickerOptions } from './models/ic-datepicker-options';\nimport { IcDatepickerDay } from './interfaces/ic-datepicker-day';\nimport { IcDatepickerOptionsInterface } from './interfaces/ic-datepicker-options';\nimport { IcDatepickerService } from './services/ic-datepicker.service';\nimport { IcDatepickerYear } from './interfaces/ic-datepicker-year';\n\n@Component({\n  selector: 'ic-datepicker',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IcDatepickerComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <div class=\"ic-datepicker-container\">\n      <input \n        [value]=\"getInputValue()\" \n        [ngClass]=\"options.inputClasses\" \n        (click)=\"toggleDatepicker()\"\n        [attr.id]=\"mergedOptions.attrs.id\"\n        [attr.name]=\"mergedOptions.attrs.name\"\n        [attr.placeholder]=\"mergedOptions.attrs.placeholder\"\n        [attr.tabindex]=\"mergedOptions.attrs.tabindex\"\n        [attr.readonly]=\"mergedOptions.attrs.readonly\"\n        type=\"text\"\n      >\n\n      <div [style.display]=\"datepickerIsOpen ? 'block' : 'none'\" [ngClass]=\"mergedOptions.position\" class=\"ic-datepicker\">\n        <div [style.display]=\"yearSelectMode ? 'none' : 'flex'\" class=\"ic-datepicker-header-bar\">\n          <button \n            (click)=\"showMonth('previous')\"\n            [style.visibility]=\"previousMonthToggleActive ? 'visible' : 'hidden'\"\n            type=\"button\" \n            class=\"cell action previous-month\"\n          >\n            <i [ngClass]=\"mergedOptions.icons.previousMonth.classes\">\n              {{ mergedOptions.icons.previousMonth.content }}\n            </i>\n          </button>\n\n          <h3 (click)=\"showYearSelectMode()\" class=\"header-title\">\n            {{ currentPeriod.format('MMMM YYYY') }}\n          </h3>\n\n          <button\n            (click)=\"showMonth('next')\"\n            [style.visibility]=\"nextMonthToggleActive ? 'visible' : 'hidden'\"\n            type=\"button\" \n            class=\"cell action next-month\"\n            >\n            <i [ngClass]=\"mergedOptions.icons.nextMonth.classes\">\n              {{ mergedOptions.icons.nextMonth.content }}\n            </i>\n          </button>          \n        </div>\n        \n        <div [style.display]=\"yearSelectMode ? 'flex' : 'none'\" class=\"ic-datepicker-header-bar\">\n          <h3 class=\"header-title year-title\">\n            {{ yearOptions[0].formatted }} - {{ yearOptions[yearOptions.length - 1].formatted }}\n          </h3>\n          \n          <button (click)=\"hideYearSelectMode()\" type=\"button\" class=\"cell action close-year-select\">\n            &times;\n          </button>\n        </div>\n\n        <div [style.display]=\"yearSelectMode ? 'none' : 'block'\">\n          <div class=\"ic-datepicker-day-labels\">\n            <span *ngFor=\"let dayLabel of dayLabels\" class=\"cell day-label\">\n              {{ dayLabel }}\n            </span>\n          </div>\n\n          <div class=\"ic-datepicker-dates\">\n            <button \n              *ngFor=\"let day of periodDays\" \n              (click)=\"setSelectedDay(day, $event)\" \n              [ngClass]=\"day.classes\"\n              [class.today]=\"day.isToday\"\n              [class.selected]=\"day.isSelected\"\n              [class.weekend]=\"day.isWeekend\"\n              [class.placeholder]=\"day.isPlaceholder\"\n              [disabled]=\"isDisabled || day.isPlaceholder || (day.isWeekend && mergedOptions.disableWeekends) || day.isDisabled\" \n              type=\"button\" \n              class=\"cell date\"\n            >\n              <span *ngIf=\"day.isPlaceholder\">&nbsp;</span>\n              <span *ngIf=\"!day.isPlaceholder\">\n                {{ day.moment.format('D') }}\n              </span>\n            </button>\n          </div>\n          \n          <div *ngIf=\"mergedOptions.showDayQuickOptions\" class=\"quick-options day-quick-options\">\n            <button \n              *ngFor=\"let option of mergedOptions.dayQuickOptions\"\n              [hidden]=\"option.isDisabled\"                \n              (click)=\"setSelectedDay(option.datepickerDay, $event)\"\n              [ngClass]=\"{ selected: (selectedDay && option.date.isSame(selectedDay.moment, 'day')) }\"\n              [disabled]=\"isDisabled\"\n              type=\"button\"\n              class=\"cell quick-option\"\n            >\n              {{ option.label }}\n            </button>\n          </div>\n        </div>\n\n        <div [style.display]=\"yearSelectMode ? 'block' : 'none'\" class=\"year-list\">\n          <div class=\"ic-datepicker-dates\">\n            <button (click)=\"showYears('previous')\" type=\"button\" class=\"cell toggle-years previous\">\n              <span>\n                <i [ngClass]=\"mergedOptions.icons.previousYears.classes\">\n                  {{ mergedOptions.icons.previousYears.content }}\n                </i>            \n              </span>\n            </button>\n            \n            <button \n              *ngFor=\"let year of yearOptions\"\n              (click)=\"setSelectedYear(year)\"\n              [ngClass]=\"{ 'this-year': year.isThisYear, selected: year.isSelected }\" \n              [disabled]=\"year.isDisabled\"\n              type=\"button\"\n              class=\"cell date year\"\n            >\n              {{ year.formatted }}              \n            </button>\n            \n            <button (click)=\"showYears('next')\" type=\"button\" class=\"cell toggle-years next\">\n              <span>\n                <i [ngClass]=\"mergedOptions.icons.nextYears.classes\">\n                  {{ mergedOptions.icons.nextYears.content }}\n                </i>            \n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .ic-datepicker-container {\n      position: relative;\n    }\n    \n    .ic-datepicker-container > input[readonly] {\n      background: #ffffff;\n    }\n    \n    .ic-datepicker {\n      position: absolute;\n      background: #ffffff;\n      width: 270px;\n      z-index: 1000;\n      -webkit-box-shadow: 0 0 10px 2px rgba(50, 50, 50, 0.25);\n      -moz-box-shadow: 0 0 10px 2px rgba(50, 50, 50, 0.25);\n      box-shadow: 0 0 10px 2px rgba(50, 50, 50, 0.25);\n    }\n    \n    .ic-datepicker.top {\n      transform-origin: 0 100%;\n      bottom: 48px;\n    }\n    \n    .ic-datepicker.bottom {\n      top: 48px;\n    }\n    \n    .ic-datepicker .cell {\n      width: calc(100% / 7);\n      font-size: 14px;\n      height: 38px;\n      display: inline-block;\n      text-align: center;\n      background: #ffffff;\n      font-weight: 300;\n      color: #484848;\n      border: 1px solid #f0f0f0;\n      outline: none;\n      box-sizing: border-box;\n    }\n    \n    .ic-datepicker .cell.selected {\n      background: #E16756;\n      border: 1px solid #E17656;\n      color: #ffffff;\n    }\n    \n    .ic-datepicker .cell:not([disabled]):not(.selected):not(.day-label):hover {\n      background: #f0f0f0;\n      cursor: pointer;\n    }\n    \n    .ic-datepicker .cell.year {\n      width: calc(100% / 5);\n    }\n    \n    .ic-datepicker .ic-datepicker-header-bar {\n      display: flex;\n      align-items: center;\n      background: #E16756;\n      color: #ffffff;\n    }\n    \n    .ic-datepicker .ic-datepicker-header-bar .action {\n      background: transparent;\n      color: #ffffff;\n      border: none;\n      outline: none;\n      padding: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    \n    .ic-datepicker .ic-datepicker-header-bar .header-title {\n      text-align: center;\n      text-transform: uppercase;\n      margin: 0;\n      padding-top: 4px;\n      font-size: 15px;\n      font-weight: 400;\n      line-height: 34px;\n      width: calc((100% / 7) * 5);\n      -webkit-touch-callout: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n    \n    .ic-datepicker .ic-datepicker-header-bar .header-title.year-title {\n      margin-left: calc(100% / 7); \n    }\n    \n    .ic-datepicker-container .ic-datepicker .ic-datepicker-header-bar .header-title:not(.year-title):hover,\n    .ic-datepicker-container .ic-datepicker .ic-datepicker-header-bar .cell.action:hover {\n      background: #ca5c4d;\n      cursor: pointer;\n    }\n    \n    .ic-datepicker .ic-datepicker-year-select-options .close-year-select {\n      display: block;\n    }\n    \n    .ic-datepicker .ic-datepicker-day-labels .day-label {\n      line-height: 38px;\n      font-size: 12px;\n      font-weight: 300;\n      text-transform: uppercase;\n      -webkit-touch-callout: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n    \n    ic-datepicker .ic-datepicker-dates .date {\n      padding-top: 0;\n      padding-bottom: 0;\n    }\n    \n    .ic-datepicker .ic-datepicker-dates .date span {\n      display: flex;\n      align-content: center;\n      justify-content: center;\n      line-height: 38px;\n    }\n    \n    .ic-datepicker .date.today:not(.selected),\n    .ic-datepicker .date.this-year:not(.selected) {\n      color: #E16756;\n    }\n    \n    .ic-datepicker .ic-datepicker-dates .date.placeholder {\n      background: #fafafa;\n    }\n    \n    .ic-datepicker .ic-datepicker-dates .date[disabled]:not(.placeholder) {\n      background: #f3f3f3;\n      color: #909090;\n    }\n    \n    .ic-datepicker .quick-options {\n      text-align: center;\n    }\n    \n    .ic-datepicker .quick-options .quick-option {\n      width: calc(100% / 2);\n    }\n    \n    .ic-datepicker .year-list .toggle-years {\n      width: 100%;\n      background: #f0f0f0;\n      font-weight: 300;\n      color: #484848;\n      border: 1px solid #f0f0f0;\n      outline: none;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    \n    .ic-datepicker .year-list .toggle-years:hover {\n      background: #ececec;\n      cursor: pointer;\n    }\n    \n    /* Chevrons - Credit Jonathan Neal (https://codepen.io/jonneal/pen/kptBs) */\n    .ic-datepicker .chevron {\n      box-sizing: content-box;    \n    }\n    \n    .ic-datepicker .chevron::before {\n      border-style: solid;\n      border-width: 0.25em 0.25em 0 0;\n      content: '';\n      display: inline-block;\n      height: 0.45em;\n      transform: rotate(-45deg);\n      width: 0.45em;\n    }\n    \n    .ic-datepicker .chevron.chevron-up::before {\n      position: relative;\n      top: 0.2em; \n    }\n    \n    .ic-datepicker .chevron.chevron-right::before {\n      left: 0;\n      transform: rotate(45deg);\n    }\n    \n    .ic-datepicker .chevron.chevron-down::before {\n      position: relative;\n      bottom: 0.2em; \n      transform: rotate(135deg);\n    }\n    \n    .ic-datepicker .chevron.chevron-left::before {\n      left: 0.25em;\n      transform: rotate(-135deg);\n    }\n  `]\n})\nexport class IcDatepickerComponent implements ControlValueAccessor, OnChanges, OnDestroy, OnInit {\n  @Input() options: IcDatepickerOptionsInterface = {};\n  @Output() dateChange = new EventEmitter();\n  @Output() monthChange = new EventEmitter();\n  @Output() opened = new EventEmitter();\n  @Output() closed = new EventEmitter();\n\n  // Control Value Accessor setup\n  selectedDay: IcDatepickerDay | null;\n  propagateTouch: () => void = () => { };\n  propagateChange: (_: any) => void = () => { };\n\n  currentPeriod: Moment.Moment;\n  datepickerIsOpen: boolean;\n  dayLabels: string[];\n  documentClickEvent: Function;\n  initialised = false;\n  isDisabled = false;\n  mergedOptions: IcDatepickerOptions;\n  nextMonthToggleActive: boolean;\n  periodDays: IcDatepickerDay[];\n  previousMonthToggleActive: boolean;\n  yearSelectMode: boolean;\n  yearOptions: IcDatepickerYear[];\n\n  constructor(\n    @Inject(IcDatepickerService) private icDatepickerService: IcDatepickerService,\n    @Inject(Renderer) private renderer: Renderer,\n    @Inject(ElementRef) private element: ElementRef\n  ) { }\n\n  /**\n   * On Component init\n   */\n  ngOnInit() {\n    this.mergedOptions = new IcDatepickerOptions(this.options, this.icDatepickerService);\n\n    // @todo: calculate whether the selected month should display based on min/max dates. Set the initial view appropriately\n\n    this.selectedDay = null;\n    this.setCurrentPeriod(Moment());\n    this.datepickerIsOpen = false;\n    this.dayLabels = this.icDatepickerService.buildDayLabels();\n    this.yearSelectMode = this.mergedOptions.defaultToYearSelect;\n    this.yearOptions = this.buildYearOptions();\n    this.toggleMonthToggles(this.currentPeriod);\n\n    this.documentClickEvent = this.renderer.listenGlobal('document', 'click', (event: MouseEvent) => {\n      event.stopPropagation();\n\n      let closeDatepicker = true;\n      let isTarget = this.element.nativeElement === event.target;\n      let containsTarget = this.element.nativeElement.contains(event.target);\n\n      if (!event.target || isTarget || containsTarget) {\n        closeDatepicker = false;\n      }\n\n      if (closeDatepicker) {\n        this.closeDatepicker();\n      }\n    });\n\n    this.initialised = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.initialised) {\n      this.mergedOptions = new IcDatepickerOptions(changes['options'].currentValue, this.icDatepickerService);\n      this.setCurrentPeriod(this.currentPeriod);\n\n      if (this.selectedDay) {\n        this.selectedDay = this.icDatepickerService.buildDatepickerDay(\n          this.selectedDay.moment,\n          this.mergedOptions,\n          this.selectedDay.moment\n        );\n\n        this.emitModelChange(this.selectedDay);\n      }\n\n      this.toggleMonthToggles(this.currentPeriod);\n    }\n  }\n\n  /**\n   * On Component destroy\n   */\n  ngOnDestroy() {\n    // Remove the body click event to prevent memory leaks\n    if (this.documentClickEvent) {\n      this.documentClickEvent();\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyboardInput(event: KeyboardEvent) {\n    if (!this.datepickerIsOpen) {\n      return false;\n    }\n\n    switch (event.keyCode) {\n      // Esc\n      case 27:\n        this.closeDatepicker();\n        break;\n\n      // Left\n      case 37:\n        this.showMonth('previous');\n        break;\n\n      // Right\n      case 39:\n        this.showMonth('next');\n        break;\n    }\n  }\n\n  /**\n   * Update the selected day when the model value is changed externally\n   *\n   * @param value\n   */\n  writeValue(value: any) {\n    if (!value) {\n      this.selectedDay = null;\n      return;\n    }\n\n    if (value !== this.selectedDay) {\n      if ('string' === typeof value) {\n        value = Moment(value, this.mergedOptions.stringModelFormat);\n      }\n\n      if (value.isValid()) {\n        let selectedMoment = this.selectedDay ? this.selectedDay.moment : null;\n        value = this.icDatepickerService.buildDatepickerDay(value, this.mergedOptions, selectedMoment);\n      } else {\n        console.warn(`Invalid model value ${value} provided to the IcDatepickerComponent`);\n        return false;\n      }\n\n      let isValid = true;\n\n      if (this.mergedOptions.minDate && value.moment.isBefore(this.mergedOptions.minDate)) {\n        isValid = false;\n      }\n\n      if (isValid) {\n        if (this.mergedOptions.maxDate && value.moment.isAfter(this.mergedOptions.maxDate)) {\n          isValid = false;\n        }\n      }\n\n      if (!isValid) {\n        console.warn('Initial date falls beyond the configured minimum/maximum date');\n        return false;\n      }\n\n      this.selectedDay = value;\n      this.setCurrentPeriod(value.moment);\n    }\n  }\n\n  /**\n   * Register an On Change callback\n   *\n   * @param fn\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Register an On Touch callback\n   *\n   * @param fn\n   */\n  registerOnTouched(fn: any): void {\n    this.propagateTouch = fn;\n  }\n\n  /**\n   * Toggle the disabled state of the component\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   * Returns the value for display in the input field\n   *\n   * @returns {string}\n   */\n  getInputValue() {\n    let value = '';\n\n    if (this.selectedDay && this.selectedDay.formattedDate) {\n      value = this.selectedDay.formattedDate;\n    }\n\n    return value;\n  }\n\n  /**\n   * Toggles the open state of the datepicker\n   */\n  toggleDatepicker() {\n    this.datepickerIsOpen = !this.datepickerIsOpen;\n\n    let event = this.datepickerIsOpen ? this.opened : this.closed;\n\n    event.emit();\n  }\n\n  /**\n   * Closes the Datepicker\n   */\n  closeDatepicker() {\n    this.datepickerIsOpen = false;\n\n    this.closed.emit();\n  }\n\n  showMonth(direction: 'next' | 'previous') {\n    let originalValue = this.currentPeriod.clone();\n    let updatedPeriod: Moment.Moment;\n\n    if ('next' === direction) {\n      updatedPeriod = this.currentPeriod.clone().add(1, 'month');\n    } else {\n      updatedPeriod = this.currentPeriod.clone().subtract(1, 'month');\n    }\n\n    this.toggleMonthToggles(updatedPeriod);\n    this.setCurrentPeriod(updatedPeriod);\n\n    this.monthChange.emit({\n      previous: originalValue.startOf('month'),\n      value: updatedPeriod.clone().startOf('month')\n    });\n  }\n\n  /**\n   *\n   * @param direction\n   */\n  showYears(direction: 'next' | 'previous') {\n    let currentLastYear: Moment.Moment;\n\n    if ('next' === direction) {\n      currentLastYear = this.yearOptions[this.yearOptions.length - 1].moment.add(1, 'year');\n    } else {\n      currentLastYear = this.yearOptions[0].moment.subtract(25, 'years');\n    }\n\n    this.yearOptions = this.buildYearOptions(currentLastYear);\n  }\n\n  showYearSelectMode() {\n    this.yearOptions = this.buildYearOptions();\n    this.yearSelectMode = true;\n  }\n\n  hideYearSelectMode() {\n    this.yearSelectMode = false;\n  }\n\n  setSelectedDay(day: IcDatepickerDay, $event?: MouseEvent) {\n    if ($event) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    if (this.isDisabled || day.isPlaceholder || day.isDisabled) {\n      return false;\n    }\n\n    if (this.selectedDay && this.selectedDay.moment && day.moment && day.moment.isSame(this.selectedDay.moment)) {\n      return false;\n    }\n\n    this.selectedDay = day;\n\n    if (day.moment) {\n      this.setCurrentPeriod(day.moment);\n    }\n\n    if (this.mergedOptions.closeOnSelect) {\n      this.closeDatepicker();\n    }\n\n    this.emitModelChange(day);\n  }\n\n  /**\n   *\n   * @param year\n   */\n  setSelectedYear(year: IcDatepickerYear) {\n    let newDate = this.currentPeriod.format('DD/MM') + '/' + year.moment.format('YYYY');\n\n    this.setCurrentPeriod(Moment(newDate, 'DD/MM/YYYY'));\n\n    this.hideYearSelectMode();\n\n    /*\n      Timeout is required to prevent the datepicker from closing when clicking a year due to\n      the year element from no longer existing at the point when the element.contains() check\n      is evaluated.\n     */\n    setTimeout(() => {\n      this.yearOptions = this.buildYearOptions();\n    });\n  }\n\n  /**\n   * Enables or disables the next/previous month toggles based on any provided min or max dates\n   *\n   * @param updatedPeriod\n   */\n  private toggleMonthToggles(updatedPeriod: Moment.Moment) {\n    if (!this.mergedOptions.minDate) {\n      this.previousMonthToggleActive = true;\n    } else {\n      this.previousMonthToggleActive = updatedPeriod.clone()\n        .subtract(1, 'month')\n        .startOf('month')\n        .isSameOrAfter(\n          this.mergedOptions\n            .minDate\n            .clone()\n            .startOf('month')\n        );\n    }\n\n    if (!this.mergedOptions.maxDate) {\n      this.nextMonthToggleActive = true;\n    } else {\n      this.nextMonthToggleActive = updatedPeriod.clone()\n        .add(1, 'month')\n        .startOf('month')\n        .isSameOrBefore(\n          this.mergedOptions\n            .maxDate\n            .clone()\n            .startOf('month')\n        );\n    }\n  }\n\n  /**\n   * Sets the currently rendered month period and generates the Day collection within that period\n   *\n   * @param momentInstance\n   */\n  private setCurrentPeriod(momentInstance: Moment.Moment) {\n    let selectedDay: Moment.Moment | null = null;\n\n    if (this.selectedDay && this.selectedDay.moment) {\n      selectedDay = this.selectedDay.moment;\n    }\n\n    this.currentPeriod = momentInstance;\n    this.periodDays = this.icDatepickerService.buildCalendarMonth(\n      this.currentPeriod.clone(),\n      this.mergedOptions,\n      selectedDay\n    );\n  }\n\n  /**\n   *\n   * @param year\n   * @returns {IcDatepickerYear[]}\n   */\n  private buildYearOptions(\n    year: Moment.Moment = this.currentPeriod.clone().subtract(12, 'years')\n  ) {\n    let years: IcDatepickerYear[] = [];\n    let end = year.clone().add(25, 'years');\n\n    while (year.isBefore(end)) {\n      let isDisabled = false;\n      let minDate = this.mergedOptions.minDate;\n      let maxDate = this.mergedOptions.maxDate;\n\n      if (\n        (minDate && year.isBefore(minDate, 'year')) ||\n        (maxDate && year.isAfter(maxDate, 'year'))\n      ) {\n        isDisabled = true;\n      }\n\n      years.push({\n        formatted: year.format('YYYY'),\n        isDisabled: isDisabled,\n        isSelected: year.isSame(this.currentPeriod, 'year'),\n        isThisYear: year.isSame(Moment(), 'year'),\n        moment: year.clone()\n      });\n\n      year.add(1, 'year');\n    }\n\n    return years;\n  }\n\n  /**\n   * Emits a model change\n   *\n   * @param day\n   */\n  private emitModelChange(day: IcDatepickerDay) {\n    let originalValue: any;\n    let updatedValue: any;\n\n    switch (this.mergedOptions.modelType) {\n      case 'moment':\n        originalValue = this.selectedDay ? this.selectedDay.moment : null;\n        updatedValue = day.moment;\n        break;\n\n      case 'IcDatepickerDay':\n        originalValue = this.selectedDay;\n        updatedValue = day;\n        break;\n\n      case 'date':\n        originalValue = this.selectedDay ? this.selectedDay.moment.toDate() : null;\n        updatedValue = day.moment.toDate();\n        break;\n\n      case 'string':\n        originalValue = this.selectedDay ? this.selectedDay.moment.format(this.mergedOptions.stringModelFormat) : null;\n        updatedValue = day.moment.format(this.mergedOptions.stringModelFormat);\n        break;\n    }\n\n    // Inform change listeners of the change\n    this.propagateChange(updatedValue);\n    this.dateChange.emit({\n      previous: originalValue,\n      value: updatedValue\n    });\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}